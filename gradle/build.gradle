buildscript {
	repositories {
		mavenLocal()
		jcenter()
		maven { url 'http://repo.spring.io/plugins-release' }
		maven { url 'http://repo.spring.io/milestone' }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath group: 'org.sonarqube.gradle', name: 'gradle-sonarqube-plugin', version: '1.0'
		classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: spring_boot_version
		classpath group: 'org.springframework.build.gradle', name: 'propdeps-plugin', version: '0.0.7'
		classpath group: 'com.moowork.gradle', name: 'gradle-node-plugin', version: '0.11'
		classpath group: 'com.moowork.gradle', name: 'gradle-grunt-plugin', version: '0.11'
	}
}

apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'propdeps'
apply plugin: 'idea'

group = 'com.jd'
version = "1.0"
description = ''

repositories {
	mavenLocal()
	jcenter()
	maven { url 'http://repo.spring.io/milestone' }
	maven { url 'http://repo.spring.io/snapshot' }
	maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
	maven { url 'https://oss.sonatype.org/content/repositories/releases' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url 'http://repo.maven.apache.org/maven2' }
}


task helloworld << {
	println  'hello,world'
}

task hello << {
	
	print 'hello , '
}

task world(dependsOn: hello) << {
	println 'world'
}

task t1

t1 << {
	print 'hello ,'
}

t1 << {
	println ' t1'
}




task createSchema << {

	println 'create database schema'
}

task loadDataTest {
	dependsOn << createSchema
}

task setupDataBase << {
	println 'load test data'
}
setupDataBase {
	doFirst {
		println 'create database schema'
	}
}

setupDataBase.doLast {
	println 'load data last'
}

setupDataBase.onlyIf {
	java.lang.System.properties['load.data'] == 'true'
}

task emailMe(dependsOn: compileJava) << {
	if(tasks.compileJava.didWork){
		println 'Send Email '
	}
}